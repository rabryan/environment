snippet fold "improved folding" !b
% `!p
try:
    level = int(t[2])
except:
    level = 0
if level == 1:
    key = "="
elif level == 2:
    key = "-"
elif level == 3:
    key = '.'
else:
    key = ' '
# previously had ${3:=} as one of the delim values
#try:
#    key = t[3][-1]
#except IndexError:
#    key = " "
snip.rv = key*max(0, 26 - int(len(t[1])//2)) ` ${1:Section} `!p
snip.rv = key*max(0, 35 - int((1 + len(t[1]))//2)) `         {{{${2:1}
${VISUAL:}% END: `!p
snip.rv = key*max(0, 21 - int(len(t[1])//2)) ` $1 `!p
snip.rv = key*max(0, 35 - int((1 + len(t[1]))//2)) `         ${2/(\d+).*/$1/}}}}

endsnippet

snippet newcmd "New Command" !b
\newcommand${3:*}{\\${1:command}}{}
\newcommand$3{\set$1}[1]{\renewcommand$3{\\$1}{#1}}
\set$1{${2:default}}
endsnippet

snippet comment "Comment and fold - verbatim" !b
\begin{comment} `!p snip.rv = " "*55` % {{{${1:3}
${VISUAL:    }\end{comment}   `!p snip.rv = " "*55` % ${1/(\d+).*/$1/g}}}}

endsnippet

snippet uuid "UUID" !b
`!p
import uuid
if not snip.c:
    snip.rv = uuid.uuid4().hex
`
endsnippet

snippet showif "Show line if value exists" !b
\ifthenelse{\equal{\\${1:macroname}}{}}
    {}{${2:DESCRIP}  & \\$1 \\\\}
endsnippet

snippet ifpslip "If Doc is a plsip" !b
\ifthenelse{\equal{\doctype}{PSLIP}}
    {${1:ifpslip}}{${2:ifnot}}
endsnippet

snippet rule "make a hrule"
\rule{${1:1}${2:in}}{${3:1pt}}
endsnippet

snippet . "\item" !b
\item ${1:}
endsnippet

snippet cit "add a citation"
\cite{${1:}}
endsnippet
